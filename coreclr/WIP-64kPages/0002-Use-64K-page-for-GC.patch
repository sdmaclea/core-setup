From 3d7aec5c80b30d5facc6ea4a98a6ec10e19276d6 Mon Sep 17 00:00:00 2001
From: "Steve MacLean, Qualcomm Datacenter Technologies, Inc"
 <sdmaclea@qti.qualcomm.com>
Date: Tue, 11 Apr 2017 18:16:35 +0000
Subject: [PATCH] Use 64K page for GC

---
 src/ToolBox/SOS/Strike/gcroot.cpp         | 4 ++--
 src/ToolBox/SOS/Strike/platformspecific.h | 2 +-
 src/gc/env/gcenv.base.h                   | 2 +-
 src/gc/gc.cpp                             | 8 ++++----
 src/gc/gcpriv.h                           | 4 ++--
 src/gc/gcsvr.cpp                          | 1 -
 src/gc/gcwks.cpp                          | 1 -
 7 files changed, 10 insertions(+), 12 deletions(-)

diff --git a/src/ToolBox/SOS/Strike/gcroot.cpp b/src/ToolBox/SOS/Strike/gcroot.cpp
index 8608098..3cb2826 100644
--- a/src/ToolBox/SOS/Strike/gcroot.cpp
+++ b/src/ToolBox/SOS/Strike/gcroot.cpp
@@ -1317,9 +1317,9 @@ void PrintNotReachableInRange(TADDR rngStart, TADDR rngEnd, BOOL bExcludeReadyFo
 // In the code we also rely on the assumption that one card_table entry (DWORD) covers an entire os page
 //
 #if defined (_TARGET_WIN64_)
-#define card_size ((size_t)(2*DT_OS_PAGE_SIZE/card_word_width))
+#define card_size ((size_t)(2*4096/card_word_width))
 #else
-#define card_size ((size_t)(DT_OS_PAGE_SIZE/card_word_width))
+#define card_size ((size_t)(4096/card_word_width))
 #endif //_TARGET_WIN64_
 
 // so card_size = 128 on x86, 256 on x64
diff --git a/src/ToolBox/SOS/Strike/platformspecific.h b/src/ToolBox/SOS/Strike/platformspecific.h
index fdbc5b5..db6800c 100644
--- a/src/ToolBox/SOS/Strike/platformspecific.h
+++ b/src/ToolBox/SOS/Strike/platformspecific.h
@@ -190,6 +190,6 @@ struct DT_RTL_USER_PROCESS_PARAMETERS
 
 #endif // !FEATURE_PAL
 
-#define DT_OS_PAGE_SIZE   4096
+#define DT_OS_PAGE_SIZE   0x10000
 
 #endif // !__PLATFORM_SPECIFIC_INCLUDED
diff --git a/src/gc/env/gcenv.base.h b/src/gc/env/gcenv.base.h
index a4befca..77da76d 100644
--- a/src/gc/env/gcenv.base.h
+++ b/src/gc/env/gcenv.base.h
@@ -300,7 +300,7 @@ typedef DPTR(uint8_t)   PTR_uint8_t;
 
 #define DECLSPEC_ALIGN(x)   __declspec(align(x))
 
-#define OS_PAGE_SIZE 4096
+#define OS_PAGE_SIZE 0x10000
 
 #ifndef _ASSERTE
 #define _ASSERTE(_expr) ASSERT(_expr)
diff --git a/src/gc/gc.cpp b/src/gc/gc.cpp
index ecc13e3..f8624e7 100644
--- a/src/gc/gc.cpp
+++ b/src/gc/gc.cpp
@@ -6306,7 +6306,7 @@ void gc_heap::make_c_mark_list (uint8_t** arr)
 static const size_t card_bundle_word_width = 32;
 
 // How do we express the fact that 32 bits (card_word_width) is one uint32_t?
-static const size_t card_bundle_size = (size_t)(OS_PAGE_SIZE / (sizeof(uint32_t)*card_bundle_word_width));
+static const size_t card_bundle_size = (size_t)(4096 / (sizeof(uint32_t)*card_bundle_word_width));
 
 inline
 size_t card_bundle_word (size_t cardb)
@@ -18786,13 +18786,13 @@ void gc_heap::fix_card_table ()
                     time_stop - time_start, tot_cycles);
 #endif //TIME_WRITE_WATCH
 
-            assert( ((card_size * card_word_width)&(OS_PAGE_SIZE-1))==0 );
+            assert( ((card_size * card_word_width)&(4096-1))==0 );
             //printf ("%Ix written into\n", bcount);
             dprintf (3,("Found %Id pages written", bcount));
             for (unsigned  i = 0; i < bcount; i++)
             {
                 // Set the card words corresponding to the entire page.
-                for (unsigned j = 0; j < (card_size*card_word_width)/OS_PAGE_SIZE; j++)
+                for (unsigned j = 0; j < (card_size*card_word_width)/4096; j++)
                 {
                     card_table [card_word (card_of (g_addresses [i]))+j] = ~0u;
                 }
@@ -26610,7 +26610,7 @@ void gc_heap::revisit_written_pages (BOOL concurrent_p, BOOL reset_only_p)
                             card_table [card_word (card_of (background_written_addresses [i]))] = ~0u;
                             dprintf (3,("Set Cards [%p:%p, %p:%p[",
                                         card_of (background_written_addresses [i]), g_addresses [i],
-                                        card_of (background_written_addresses [i]+OS_PAGE_SIZE), background_written_addresses [i]+OS_PAGE_SIZE));
+                                        card_of (background_written_addresses [i]+4096), background_written_addresses [i]+4096));
     #endif //NO_WRITE_BARRIER
                             uint8_t* page = (uint8_t*)background_written_addresses[i];
                             dprintf (3, ("looking at page %d at %Ix(h: %Ix)", i, 
diff --git a/src/gc/gcpriv.h b/src/gc/gcpriv.h
index 108045c..4308e43 100644
--- a/src/gc/gcpriv.h
+++ b/src/gc/gcpriv.h
@@ -4311,9 +4311,9 @@ dynamic_data* gc_heap::dynamic_data_of (int gen_number)
 // In the code we also rely on the assumption that one card_table entry (uint32_t) covers an entire os page
 //
 #if defined (BIT64)
-#define card_size ((size_t)(2*OS_PAGE_SIZE/card_word_width))
+#define card_size ((size_t)(8192/card_word_width))
 #else
-#define card_size ((size_t)(OS_PAGE_SIZE/card_word_width))
+#define card_size ((size_t)(4096/card_word_width))
 #endif // BIT64
 
 // Returns the index of the card word a card is in
diff --git a/src/gc/gcsvr.cpp b/src/gc/gcsvr.cpp
index 7656dd9..70801dd 100644
--- a/src/gc/gcsvr.cpp
+++ b/src/gc/gcsvr.cpp
@@ -4,7 +4,6 @@
 
 
 
-#define OS_PAGE_SIZE 0x1000
 #include "common.h"
 
 #if defined(FEATURE_SVR_GC)
diff --git a/src/gc/gcwks.cpp b/src/gc/gcwks.cpp
index 0c47289..5c489df 100644
--- a/src/gc/gcwks.cpp
+++ b/src/gc/gcwks.cpp
@@ -4,7 +4,6 @@
 
 
 
-#define OS_PAGE_SIZE 0x1000
 #include "common.h"
 
 #include "gcenv.h"
-- 
2.7.4

