From 8e6729f47765ea79504e8172ec771d17cbdacc3f Mon Sep 17 00:00:00 2001
From: "Steve MacLean, Qualcomm Datacenter Technologies, Inc"
 <sdmaclea@qti.qualcomm.com>
Date: Thu, 1 Dec 2016 14:08:22 -0500
Subject: [PATCH 07/43] [Arm64/Unix] ThrowExceptionFromContextInternal

---
 src/pal/src/arch/arm64/asmconstants.h    | 81 ++++++++++++++++++++++++++++++++
 src/pal/src/arch/arm64/context2.S        | 76 +-----------------------------
 src/pal/src/arch/arm64/exceptionhelper.S | 30 +++++++++++-
 3 files changed, 112 insertions(+), 75 deletions(-)
 create mode 100644 src/pal/src/arch/arm64/asmconstants.h

diff --git a/src/pal/src/arch/arm64/asmconstants.h b/src/pal/src/arch/arm64/asmconstants.h
new file mode 100644
index 0000000..5bc77ad
--- /dev/null
+++ b/src/pal/src/arch/arm64/asmconstants.h
@@ -0,0 +1,81 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+// See the LICENSE file in the project root for more information.
+
+#ifndef __PAL_ARM64_ASMCONSTANTS_H__
+#define __PAL_ARM64_ASMCONSTANTS_H__
+
+
+#define CONTEXT_ContextFlags 0
+#define CONTEXT_Cpsr         CONTEXT_ContextFlags+4
+#define CONTEXT_X0           CONTEXT_Cpsr+4
+#define CONTEXT_X1           CONTEXT_X0+8
+#define CONTEXT_X2           CONTEXT_X1+8
+#define CONTEXT_X3           CONTEXT_X2+8
+#define CONTEXT_X4           CONTEXT_X3+8
+#define CONTEXT_X5           CONTEXT_X4+8
+#define CONTEXT_X6           CONTEXT_X5+8
+#define CONTEXT_X7           CONTEXT_X6+8
+#define CONTEXT_X8           CONTEXT_X7+8
+#define CONTEXT_X9           CONTEXT_X8+8
+#define CONTEXT_X10          CONTEXT_X9+8
+#define CONTEXT_X11          CONTEXT_X10+8
+#define CONTEXT_X12          CONTEXT_X11+8
+#define CONTEXT_X13          CONTEXT_X12+8
+#define CONTEXT_X14          CONTEXT_X13+8
+#define CONTEXT_X15          CONTEXT_X14+8
+#define CONTEXT_X16          CONTEXT_X15+8
+#define CONTEXT_X17          CONTEXT_X16+8
+#define CONTEXT_X18          CONTEXT_X17+8
+#define CONTEXT_X19          CONTEXT_X18+8
+#define CONTEXT_X20          CONTEXT_X19+8
+#define CONTEXT_X21          CONTEXT_X20+8
+#define CONTEXT_X22          CONTEXT_X21+8
+#define CONTEXT_X23          CONTEXT_X22+8
+#define CONTEXT_X24          CONTEXT_X23+8
+#define CONTEXT_X25          CONTEXT_X24+8
+#define CONTEXT_X26          CONTEXT_X25+8
+#define CONTEXT_X27          CONTEXT_X26+8
+#define CONTEXT_X28          CONTEXT_X27+8
+#define CONTEXT_Fp           CONTEXT_X28+8
+#define CONTEXT_Lr           CONTEXT_Fp+8
+#define CONTEXT_Sp           CONTEXT_Lr+8
+#define CONTEXT_Pc           CONTEXT_Sp+8
+#define CONTEXT_NEON_OFFSET  CONTEXT_Pc+8
+#define CONTEXT_V0           0
+#define CONTEXT_V1           CONTEXT_V0+16
+#define CONTEXT_V2           CONTEXT_V1+16
+#define CONTEXT_V3           CONTEXT_V2+16
+#define CONTEXT_V4           CONTEXT_V3+16
+#define CONTEXT_V5           CONTEXT_V4+16
+#define CONTEXT_V6           CONTEXT_V5+16
+#define CONTEXT_V7           CONTEXT_V6+16
+#define CONTEXT_V8           CONTEXT_V7+16
+#define CONTEXT_V9           CONTEXT_V8+16
+#define CONTEXT_V10          CONTEXT_V9+16
+#define CONTEXT_V11          CONTEXT_V10+16
+#define CONTEXT_V12          CONTEXT_V11+16
+#define CONTEXT_V13          CONTEXT_V12+16
+#define CONTEXT_V14          CONTEXT_V13+16
+#define CONTEXT_V15          CONTEXT_V14+16
+#define CONTEXT_V16          CONTEXT_V15+16
+#define CONTEXT_V17          CONTEXT_V16+16
+#define CONTEXT_V18          CONTEXT_V17+16
+#define CONTEXT_V19          CONTEXT_V18+16
+#define CONTEXT_V20          CONTEXT_V19+16
+#define CONTEXT_V21          CONTEXT_V20+16
+#define CONTEXT_V22          CONTEXT_V21+16
+#define CONTEXT_V23          CONTEXT_V22+16
+#define CONTEXT_V24          CONTEXT_V23+16
+#define CONTEXT_V25          CONTEXT_V24+16
+#define CONTEXT_V26          CONTEXT_V25+16
+#define CONTEXT_V27          CONTEXT_V26+16
+#define CONTEXT_V28          CONTEXT_V27+16
+#define CONTEXT_V29          CONTEXT_V28+16
+#define CONTEXT_V30          CONTEXT_V29+16
+#define CONTEXT_V31          CONTEXT_V30+16
+#define CONTEXT_FLOAT_CONTROL_OFFSET  CONTEXT_V31
+#define CONTEXT_Fpcr         0
+#define CONTEXT_Fpsr         CONTEXT_Fpcr+4
+
+#endif
diff --git a/src/pal/src/arch/arm64/context2.S b/src/pal/src/arch/arm64/context2.S
index a64e62c..4c8675c 100644
--- a/src/pal/src/arch/arm64/context2.S
+++ b/src/pal/src/arch/arm64/context2.S
@@ -8,6 +8,7 @@
 //
 
 #include "unixasmmacros.inc"
+#include "asmconstants.h"
 
 #define CONTEXT_ARM64   0x00400000L
 
@@ -18,77 +19,6 @@
 
 #define CONTEXT_FULL (CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_FLOATING_POINT)
 
-#define CONTEXT_ContextFlags 0
-#define CONTEXT_Cpsr         CONTEXT_ContextFlags+4
-#define CONTEXT_X0           CONTEXT_Cpsr+4
-#define CONTEXT_X1           CONTEXT_X0+8
-#define CONTEXT_X2           CONTEXT_X1+8
-#define CONTEXT_X3           CONTEXT_X2+8
-#define CONTEXT_X4           CONTEXT_X3+8
-#define CONTEXT_X5           CONTEXT_X4+8
-#define CONTEXT_X6           CONTEXT_X5+8
-#define CONTEXT_X7           CONTEXT_X6+8
-#define CONTEXT_X8           CONTEXT_X7+8
-#define CONTEXT_X9           CONTEXT_X8+8
-#define CONTEXT_X10          CONTEXT_X9+8
-#define CONTEXT_X11          CONTEXT_X10+8
-#define CONTEXT_X12          CONTEXT_X11+8
-#define CONTEXT_X13          CONTEXT_X12+8
-#define CONTEXT_X14          CONTEXT_X13+8
-#define CONTEXT_X15          CONTEXT_X14+8
-#define CONTEXT_X16          CONTEXT_X15+8
-#define CONTEXT_X17          CONTEXT_X16+8
-#define CONTEXT_X18          CONTEXT_X17+8
-#define CONTEXT_X19          CONTEXT_X18+8
-#define CONTEXT_X20          CONTEXT_X19+8
-#define CONTEXT_X21          CONTEXT_X20+8
-#define CONTEXT_X22          CONTEXT_X21+8
-#define CONTEXT_X23          CONTEXT_X22+8
-#define CONTEXT_X24          CONTEXT_X23+8
-#define CONTEXT_X25          CONTEXT_X24+8
-#define CONTEXT_X26          CONTEXT_X25+8
-#define CONTEXT_X27          CONTEXT_X26+8
-#define CONTEXT_X28          CONTEXT_X27+8
-#define CONTEXT_Fp           CONTEXT_X28+8
-#define CONTEXT_Lr           CONTEXT_Fp+8
-#define CONTEXT_Sp           CONTEXT_Lr+8
-#define CONTEXT_Pc           CONTEXT_Sp+8
-#define CONTEXT_NEON_OFFSET  CONTEXT_Pc+8
-#define CONTEXT_V0           0
-#define CONTEXT_V1           CONTEXT_V0+16
-#define CONTEXT_V2           CONTEXT_V1+16
-#define CONTEXT_V3           CONTEXT_V2+16
-#define CONTEXT_V4           CONTEXT_V3+16
-#define CONTEXT_V5           CONTEXT_V4+16
-#define CONTEXT_V6           CONTEXT_V5+16
-#define CONTEXT_V7           CONTEXT_V6+16
-#define CONTEXT_V8           CONTEXT_V7+16
-#define CONTEXT_V9           CONTEXT_V8+16
-#define CONTEXT_V10          CONTEXT_V9+16
-#define CONTEXT_V11          CONTEXT_V10+16
-#define CONTEXT_V12          CONTEXT_V11+16
-#define CONTEXT_V13          CONTEXT_V12+16
-#define CONTEXT_V14          CONTEXT_V13+16
-#define CONTEXT_V15          CONTEXT_V14+16
-#define CONTEXT_V16          CONTEXT_V15+16
-#define CONTEXT_V17          CONTEXT_V16+16
-#define CONTEXT_V18          CONTEXT_V17+16
-#define CONTEXT_V19          CONTEXT_V18+16
-#define CONTEXT_V20          CONTEXT_V19+16
-#define CONTEXT_V21          CONTEXT_V20+16
-#define CONTEXT_V22          CONTEXT_V21+16
-#define CONTEXT_V23          CONTEXT_V22+16
-#define CONTEXT_V24          CONTEXT_V23+16
-#define CONTEXT_V25          CONTEXT_V24+16
-#define CONTEXT_V26          CONTEXT_V25+16
-#define CONTEXT_V27          CONTEXT_V26+16
-#define CONTEXT_V28          CONTEXT_V27+16
-#define CONTEXT_V29          CONTEXT_V28+16
-#define CONTEXT_V30          CONTEXT_V29+16
-#define CONTEXT_V31          CONTEXT_V30+16
-#define CONTEXT_FLOAT_CONTROL_OFFSET  CONTEXT_V31
-#define CONTEXT_Fpcr         0
-#define CONTEXT_Fpsr         CONTEXT_Fpcr+4
 
 // Incoming:
 //  x0: Context*
@@ -115,10 +45,8 @@ LEAF_ENTRY CONTEXT_CaptureContext, _TEXT
     ldr x2, [sp, 24]
     str w2, [x0, CONTEXT_Cpsr]
     stp fp, lr, [x0, CONTEXT_Fp]
-    add sp, sp, #32
-    mov x2, sp
+    add x2, sp, #32
     stp x2, lr, [x0, CONTEXT_Sp]
-    sub sp, sp, #32
 
 LOCAL_LABEL(Done_CONTEXT_CONTROL): 
     // we dont clobber x1 in the CONTEXT_CONTROL case
diff --git a/src/pal/src/arch/arm64/exceptionhelper.S b/src/pal/src/arch/arm64/exceptionhelper.S
index 4fdcfc5..80075ae 100644
--- a/src/pal/src/arch/arm64/exceptionhelper.S
+++ b/src/pal/src/arch/arm64/exceptionhelper.S
@@ -3,7 +3,35 @@
 // See the LICENSE file in the project root for more information.
 
 #include "unixasmmacros.inc"
+#include "asmconstants.h"
 
+//////////////////////////////////////////////////////////////////////////
+//
+// This function creates a stack frame right below the target frame, restores all callee
+// saved registers, SP, and LR from the passed in context.
+// Then it uses the ThrowExceptionHelper to throw the passed in exception from that context.
+// EXTERN_C void ThrowExceptionFromContextInternal(CONTEXT* context, PAL_SEHException* ex);
 LEAF_ENTRY ThrowExceptionFromContextInternal, _TEXT
-    EMIT_BREAKPOINT
+    // Save the FP & LR to the stack so that the unwind can work at the instruction after
+    // loading the FP from the context, but before loading the SP from the context.
+    stp fp, lr, [sp, -16]!
+
+    ldr	x19,	[x0, #(CONTEXT_X19)]
+    ldr	x20,	[x0, #(CONTEXT_X20)]
+    ldr	x21,	[x0, #(CONTEXT_X21)]
+    ldr	x22,	[x0, #(CONTEXT_X22)]
+    ldr	x23,	[x0, #(CONTEXT_X23)]
+    ldr	x24,	[x0, #(CONTEXT_X24)]
+    ldr	x25,	[x0, #(CONTEXT_X25)]
+    ldr	x26,	[x0, #(CONTEXT_X26)]
+    ldr	x27,	[x0, #(CONTEXT_X27)]
+    ldr	x28,	[x0, #(CONTEXT_X28)]
+    ldr	fp, 	[x0, #(CONTEXT_Fp)]
+    ldr	lr, 	[x0, #(CONTEXT_Pc)]
+    ldr	x2, 	[x0, #(CONTEXT_Sp)]
+    mov sp, x2
+
+    // The PAL_SEHException pointer
+    mov	x0,	x1
+    b	EXTERNAL_C_FUNC(ThrowExceptionHelper)
 LEAF_END ThrowExceptionFromContextInternal, _TEXT
-- 
2.7.4

