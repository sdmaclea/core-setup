From ff77a63ad4f3c9a6bef21d0a545c9a5a95842d35 Mon Sep 17 00:00:00 2001
From: Steve MacLean <sdmaclea.qdt@qualcommdatacenter.com>
Date: Fri, 20 Oct 2017 16:53:52 -0400
Subject: [PATCH] [Arm64] SIMD ins_Load

---
 src/jit/emitarm64.cpp | 6 +++---
 src/jit/instr.cpp     | 2 ++
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/jit/emitarm64.cpp b/src/jit/emitarm64.cpp
index c3bbfc8..0996fbd 100644
--- a/src/jit/emitarm64.cpp
+++ b/src/jit/emitarm64.cpp
@@ -6101,8 +6101,8 @@ void emitter::emitIns_R_S(instruction ins, emitAttr attr, regNumber reg1, int va
 
         case INS_str:
         case INS_ldr:
-            assert(isValidGeneralDatasize(size));
-            scale = (size == EA_8BYTE) ? 3 : 2;
+            assert(isValidGeneralDatasize(size) || isValidVectorDatasize(size));
+            scale = genLog2(size);
             break;
 
         case INS_lea:
@@ -6123,7 +6123,7 @@ void emitter::emitIns_R_S(instruction ins, emitAttr attr, regNumber reg1, int va
 
     base = emitComp->lvaFrameAddress(varx, &FPbased);
     disp = base + offs;
-    assert((scale >= 0) && (scale <= 3));
+    assert((scale >= 0) && (scale <= 4));
 
     regNumber reg2 = FPbased ? REG_FPBASE : REG_SPBASE;
     reg2           = encodingSPtoZR(reg2);
diff --git a/src/jit/instr.cpp b/src/jit/instr.cpp
index 5567302..f654455 100644
--- a/src/jit/instr.cpp
+++ b/src/jit/instr.cpp
@@ -3292,6 +3292,8 @@ instruction CodeGenInterface::ins_Load(var_types srcType, bool aligned /*=false*
             // latter.
             return (aligned) ? INS_movaps : INS_movups;
         }
+#elif defined(_TARGET_ARM64_)
+        return INS_ldr;
 #else
         assert(!"ins_Load with SIMD type");
 #endif
-- 
2.7.4

