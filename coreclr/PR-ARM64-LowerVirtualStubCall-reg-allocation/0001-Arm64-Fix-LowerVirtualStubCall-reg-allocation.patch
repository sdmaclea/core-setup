From 817907e319bdb30b02dfb4064dd613b2eeb15292 Mon Sep 17 00:00:00 2001
From: Steve MacLean <sdmaclea.qdt@qualcommdatacenter.com>
Date: Wed, 22 Nov 2017 15:15:35 -0500
Subject: [PATCH] [Arm64] Fix LowerVirtualStubCall reg allocation

---
 src/jit/lower.cpp | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/src/jit/lower.cpp b/src/jit/lower.cpp
index 9d63c4b..321f754 100644
--- a/src/jit/lower.cpp
+++ b/src/jit/lower.cpp
@@ -4184,8 +4184,17 @@ GenTree* Lowering::LowerVirtualStubCall(GenTreeCall* call)
 // On ARM we must use a proper address in R12(thunk register) without dereferencing.
 // So for the jump we use the default register.
 // TODO: specifying register probably unnecessary for other platforms, too.
-#if !defined(_TARGET_UNIX_) && !defined(_TARGET_ARM_)
+#if !defined(_TARGET_UNIX_) && !defined(_TARGET_ARM_) && !defined(_TARGET_ARM64_)
             indir->gtRegNum = REG_JUMP_THUNK_PARAM;
+#elif defined(_TARGET_ARM64_)
+            // Prevent indir->gtRegNum from colliding with addr->gtRegNum
+            indir->gtRegNum = REG_JUMP_THUNK_PARAM;
+
+            // Sanity checks
+            assert(addr->gtRegNum != indir->gtRegNum); // indir and addr registers must be different
+            static_assert_no_msg((RBM_JUMP_THUNK_PARAM & RBM_ARG_REGS) == 0);
+            static_assert_no_msg((RBM_JUMP_THUNK_PARAM & RBM_INT_CALLEE_TRASH) != 0);
+
 #elif defined(_TARGET_ARM_)
             // TODO-ARM-Cleanup: This is a temporarey hotfix to fix a regression observed in Linux/ARM.
             if (!comp->IsTargetAbi(CORINFO_CORERT_ABI))
-- 
2.7.4

