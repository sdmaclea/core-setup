From a8f971b6ea3891567266ff005b1e90135a7ade40 Mon Sep 17 00:00:00 2001
From: Steve MacLean <sdmaclea.qdt@qualcommdatacenter.com>
Date: Tue, 12 Sep 2017 11:22:51 -0400
Subject: [PATCH] Simplify divisorValue calculation

---
 src/jit/morph.cpp | 14 ++++----------
 1 file changed, 4 insertions(+), 10 deletions(-)

diff --git a/src/jit/morph.cpp b/src/jit/morph.cpp
index dc2471f..64bfb1a 100644
--- a/src/jit/morph.cpp
+++ b/src/jit/morph.cpp
@@ -11890,17 +11890,11 @@ GenTreePtr Compiler::fgMorphSmpOp(GenTreePtr tree, MorphAddrContext* mac)
                 //
                 {
                     // Do "a % b = a - (a / b) * b" morph if ...................
-                    bool doMorphModToSubMulDiv = !op2->IsIntegralConst() ||     // Divisor is not an integer constant
+                    bool doMorphModToSubMulDiv =
+                        !op2->IsIntegralConst() ||             // Divisor is not an integer constant
                         (tree->OperGet() == GT_MOD) ||         // Modulo operation is signed
-                                                 op1->IsCnsIntOrI();            // Dividend is constant
-                    if (!doMorphModToSubMulDiv)                                 // Dividend is not a power of two
-                    {
-                        size_t divisorValue = (tree->OperGet() == GT_MOD) && (tree->TypeGet() == TYP_INT)
-                                                  ? op2->AsIntCon()->IconValue() & UINT32_MAX
-                                                  : op2->AsIntCon()->IconValue();
-
-                        doMorphModToSubMulDiv |= !isPow2(divisorValue);
-                    }
+                        op1->IsCnsIntOrI() ||                  // Dividend is constant
+                        !isPow2(op2->AsIntCon()->IconValue()); // Divisor is not a power of two
 
                     if (doMorphModToSubMulDiv)
                     {
-- 
2.7.4

