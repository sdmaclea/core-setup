From 5ee0c131ec9e2c79a7ea8628b471965fefcdce58 Mon Sep 17 00:00:00 2001
From: Steve MacLean <sdmaclea.qdt@qualcommdatacenter.com>
Date: Fri, 6 Oct 2017 15:04:00 -0400
Subject: [PATCH] [Arm64] EXTERNAL_FeatureSIMD_Default = 1

---
 src/inc/clrconfigvalues.h | 11 +++++++----
 src/vm/codeman.cpp        |  8 ++++++++
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/src/inc/clrconfigvalues.h b/src/inc/clrconfigvalues.h
index 96cd110..0c83b31 100644
--- a/src/inc/clrconfigvalues.h
+++ b/src/inc/clrconfigvalues.h
@@ -545,13 +545,16 @@ CONFIG_DWORD_INFO_EX(INTERNAL_JitLoopHoistStats, W("JitLoopHoistStats"), 0, "Dis
 CONFIG_DWORD_INFO_EX(INTERNAL_JitDebugLogLoopCloning, W("JitDebugLogLoopCloning"), 0, "In debug builds log places where loop cloning optimizations are performed on the fast path.", CLRConfig::REGUTIL_default);
 CONFIG_DWORD_INFO_EX(INTERNAL_JitVNMapSelLimit, W("JitVNMapSelLimit"), 0, "If non-zero, assert if # of VNF_MapSelect applications considered reaches this", CLRConfig::REGUTIL_default)
 RETAIL_CONFIG_DWORD_INFO(INTERNAL_JitVNMapSelBudget, W("JitVNMapSelBudget"), 100, "Max # of MapSelect's considered for a particular top-level invocation.")
-#if defined(_TARGET_AMD64_) || defined(_TARGET_X86_)
+#if defined(_TARGET_XARCH_) || defined(_TARGET_ARM64_)
 #define EXTERNAL_FeatureSIMD_Default 1
-#define EXTERNAL_JitEnableAVX_Default 1
-#else // !defined(_TARGET_AMD64_) && !defined(_TARGET_X86_)
+#else // !defined(_TARGET_XARCH_) && !defined(_TARGET_ARM64_)
 #define EXTERNAL_FeatureSIMD_Default 0
+#endif // !defined(_TARGET_XARCH_) && !defined(_TARGET_ARM64_)
+#if defined(_TARGET_XARCH_)
+#define EXTERNAL_JitEnableAVX_Default 1
+#else // !defined(_TARGET_XARCH_)
 #define EXTERNAL_JitEnableAVX_Default 0
-#endif // !defined(_TARGET_AMD64_) && !defined(_TARGET_X86_)
+#endif // !defined(_TARGET_XARCH_)
 RETAIL_CONFIG_DWORD_INFO_EX(EXTERNAL_FeatureSIMD, W("FeatureSIMD"), EXTERNAL_FeatureSIMD_Default, "Enable SIMD support with companion SIMDVector.dll", CLRConfig::REGUTIL_default)
 RETAIL_CONFIG_DWORD_INFO_EX(EXTERNAL_EnableAVX, W("EnableAVX"), EXTERNAL_JitEnableAVX_Default, "Enable AVX instruction set for wide operations as default", CLRConfig::REGUTIL_default)
 
diff --git a/src/vm/codeman.cpp b/src/vm/codeman.cpp
index a19ab8e..174de17 100644
--- a/src/vm/codeman.cpp
+++ b/src/vm/codeman.cpp
@@ -1439,6 +1439,14 @@ void EEJitManager::SetCpuInfo()
     }
 #endif // defined(_TARGET_X86_) || defined(_TARGET_AMD64_)
 
+#if defined(_TARGET_ARM64_)
+    static ConfigDWORD fFeatureSIMD;
+    if (fFeatureSIMD.val(CLRConfig::EXTERNAL_FeatureSIMD) != 0)
+    {
+        CPUCompileFlags.Set(CORJIT_FLAGS::CORJIT_FLAG_FEATURE_SIMD);
+    }
+#endif
+
     m_CPUCompileFlags = CPUCompileFlags;
 }
 
-- 
2.7.4

