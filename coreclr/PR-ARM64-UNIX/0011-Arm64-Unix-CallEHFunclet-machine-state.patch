From 6e4d21953717abfa3cc6ff65b2204e54884fdb59 Mon Sep 17 00:00:00 2001
From: "Steve MacLean, Qualcomm Datacenter Technologies, Inc"
 <sdmaclea@qti.qualcomm.com>
Date: Fri, 13 Jan 2017 19:28:28 +0000
Subject: [PATCH] [Arm64/Unix] CallEHFunclet machine state

Restore non-volatile machine state in CallEHFunclet
---
 src/vm/arm64/asmhelpers.S | 37 +++++++++++++++++++++++--------------
 1 file changed, 23 insertions(+), 14 deletions(-)

diff --git a/src/vm/arm64/asmhelpers.S b/src/vm/arm64/asmhelpers.S
index cc5c4f7..deb2a98 100644
--- a/src/vm/arm64/asmhelpers.S
+++ b/src/vm/arm64/asmhelpers.S
@@ -901,16 +901,6 @@ GenerateRedirectedHandledJITCaseStub GCStress
 
 // This helper enables us to call into a funclet after restoring Fp register
 NESTED_ENTRY CallEHFunclet, _TEXT, NoHandler
-
-    // Using below prolog instead of PROLOG_SAVE_REG_PAIR fp,lr, #-16
-    // is intentional. Above statement would also emit instruction to save
-    // sp in fp. If sp is saved in fp in prolog then it is not expected that fp can change in the body
-    // of method. However, this method needs to be able to change fp before calling funclet.
-    // This is required to access locals in funclet.
-    PROLOG_SAVE_REG_PAIR_INDEXED x19,x20, -16
-    PROLOG_SAVE_REG   fp, 0
-    PROLOG_SAVE_REG   lr, 8
-
     // On entry:
     //
     // X0 = throwable
@@ -918,17 +908,36 @@ NESTED_ENTRY CallEHFunclet, _TEXT, NoHandler
     // X2 = address of X19 register in CONTEXT record// used to restore the non-volatile registers of CrawlFrame
     // X3 = address of the location where the SP of funclet's caller (i.e. this helper) should be saved.
     //
-    // Save the SP of this function
-    mov fp, sp
-    str fp, [x3]
 
+    PROLOG_SAVE_REG_PAIR_INDEXED   fp, lr, -96
+    // Spill callee saved registers
+    PROLOG_SAVE_REG_PAIR   x19, x20, 16
+    PROLOG_SAVE_REG_PAIR   x21, x22, 32
+    PROLOG_SAVE_REG_PAIR   x23, x24, 48
+    PROLOG_SAVE_REG_PAIR   x25, x26, 64
+    PROLOG_SAVE_REG_PAIR   x27, x28, 80
+
+    // Save the SP of this function
+    mov x4, sp
+    str x4, [x3]
+
+    ldp x19, x20, [x2, #0]
+    ldp x21, x22, [x2, #16]
+    ldp x23, x24, [x2, #32]
+    ldp x25, x26, [x2, #48]
+    ldp x27, x28, [x2, #64]
     ldr fp, [x2, #80] // offset of fp in CONTEXT relative to X19
 
     // Invoke the funclet
     blr x1
     nop
 
-    EPILOG_RESTORE_REG_PAIR_INDEXED   fp, lr, 16
+    EPILOG_RESTORE_REG_PAIR   x19, x20, 16
+    EPILOG_RESTORE_REG_PAIR   x21, x22, 32
+    EPILOG_RESTORE_REG_PAIR   x23, x24, 48
+    EPILOG_RESTORE_REG_PAIR   x25, x26, 64
+    EPILOG_RESTORE_REG_PAIR   x27, x28, 80
+    EPILOG_RESTORE_REG_PAIR_INDEXED   fp, lr,   96
     EPILOG_RETURN
 
 NESTED_END CallEHFunclet, _TEXT
-- 
2.7.4

