From 933fb145c0e9f6ce66d9f5a8613427a02dee62ab Mon Sep 17 00:00:00 2001
From: Steve MacLean <sdmaclea.qdt@qualcommdatacenter.com>
Date: Thu, 8 Jun 2017 14:52:16 +0000
Subject: [PATCH] Respond to micronit

---
 src/gc/env/gcenv.base.h | 4 ++--
 src/inc/volatile.h      | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/gc/env/gcenv.base.h b/src/gc/env/gcenv.base.h
index 56e67a3..f03494d 100644
--- a/src/gc/env/gcenv.base.h
+++ b/src/gc/env/gcenv.base.h
@@ -396,7 +396,7 @@ T VolatileLoad(T const * pt)
 {
 #if defined(_ARM64_) && defined(__clang__)
     T val;
-    unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
+    static const unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
     if((1 << sizeof(T)) & lockFreeAtomicSizeMask)
     {
         __atomic_load((T volatile const *)pt, &val, __ATOMIC_ACQUIRE);
@@ -437,7 +437,7 @@ inline
 void VolatileStore(T* pt, T val)
 {
 #if defined(_ARM64_) && defined(__clang__)
-    unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
+    static const unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
     if((1 << sizeof(T)) & lockFreeAtomicSizeMask)
     {
         __atomic_store((T volatile *)pt, &val, __ATOMIC_RELEASE);
diff --git a/src/inc/volatile.h b/src/inc/volatile.h
index 44d1f0c..5aa0e50 100644
--- a/src/inc/volatile.h
+++ b/src/inc/volatile.h
@@ -122,7 +122,7 @@ T VolatileLoad(T const * pt)
 #ifndef DACCESS_COMPILE
 #if defined(_ARM64_) && defined(__GNUC__)
     T val;
-    unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
+    static const unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
     if((1 << sizeof(T)) & lockFreeAtomicSizeMask)
     {
         __atomic_load((T volatile const *)pt, &val, __ATOMIC_ACQUIRE);
@@ -181,7 +181,7 @@ void VolatileStore(T* pt, T val)
 
 #ifndef DACCESS_COMPILE
 #if defined(_ARM64_) && defined(__GNUC__)
-    unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
+    static const unsigned lockFreeAtomicSizeMask = (1 << 1) | (1 << 2) | (1 << 4) | (1 << 8);
     if((1 << sizeof(T)) & lockFreeAtomicSizeMask)
     {
         __atomic_store((T volatile *)pt, &val, __ATOMIC_RELEASE);
-- 
2.7.4

