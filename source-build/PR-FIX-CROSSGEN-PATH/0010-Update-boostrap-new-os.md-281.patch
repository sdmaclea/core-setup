From 71a24854c4ea291edad09b1c4a3e18a56defca67 Mon Sep 17 00:00:00 2001
From: Sunanda Balasubramanian <subal@microsoft.com>
Date: Tue, 7 Nov 2017 16:43:45 -0800
Subject: [PATCH] Update boostrap-new-os.md (#281)

* Update boostrap-new-os.md

Update boostrap-new-os.md to reflect the location of the bash script to bootstrap CLI.

* Update boostrap-new-os.md

* Update boostrap-new-os.md

* Update boostrap-new-os.md

* Update boostrap-new-os.md

* Update boostrap-new-os.md
---
 Documentation/boostrap-new-os.md | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/Documentation/boostrap-new-os.md b/Documentation/boostrap-new-os.md
index 546733f..6281ed4 100644
--- a/Documentation/boostrap-new-os.md
+++ b/Documentation/boostrap-new-os.md
@@ -39,7 +39,8 @@ The following libraries and tools need to be installed in order to build the boo
 * icu
 * libuuid
 ### Building the bootstrap CLI
-There is a bash script file that automatizes most of the process of building the bootstrap CLI end to end. It first creates a folder named by the new target RID, clones the coreclr, corefx and core-setup repos into it and checks out the same commit of each of the repos as the one that was used to build the seed CLI. This first step is skipped if the coreclr, corefx and core-setup folders already exist. This is important so that the sources can be modified to fix possible build issues and to target the new RID.
+There is a bash script file that automatizes most of the process of building the bootstrap CLI end to end. The bash script is located at `dotnet/source-build/scripts/bootstrap/buildbootstrapcli.sh`. It first creates a folder named by the new target RID, clones the coreclr, corefx and core-setup repos into it and checks out the same commit of each of the repos as the one that was used to build the seed CLI. This first step is skipped if the coreclr, corefx and core-setup folders already exist. This is important so that the sources can be modified to fix possible build issues and to target the new RID.
+
 The script needs to be passed several arguments. The target architecture, the build configuration, the target OS, the new RID and path to the folder with the untared seed CLI. There is also an optional option to specify the version of the Clang compiler to use to compile the native code. There is also an option to pass in a System.Private.CoreLib.dll built elsewhere and an option to crossgen it. This is useful if you are building debug configuration, since the seed CLI that comes from Azure is built for release configuration and the release version of System.Private.CoreLib.dll is not compatible with debug version of libcoreclr.so.
 Here is the summary of the options that you get from running the script with `--help` option:
 ```
-- 
2.7.4

